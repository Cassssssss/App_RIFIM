{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\nexport const api = {\n  // Systèmes\n  getSystems: async () => {\n    const response = await fetch(`${API_URL}/systems`);\n    return response.json();\n  },\n  createSystem: async name => {\n    const response = await fetch(`${API_URL}/systems`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name\n      })\n    });\n    return response.json();\n  },\n  // Localisations\n  getLocations: async systemId => {\n    const response = await fetch(`${API_URL}/systems/${systemId}/locations`);\n    return response.json();\n  },\n  createLocation: async (systemId, name) => {\n    const response = await fetch(`${API_URL}/systems/${systemId}/locations`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name\n      })\n    });\n    return response.json();\n  },\n  // Upload d'images\n  uploadImage: async file => {\n    const formData = new FormData();\n    formData.append('image', file);\n    const response = await fetch(`${API_URL}/upload`, {\n      method: 'POST',\n      body: formData\n    });\n    return response.json();\n  },\n  deleteSystem: async systemId => {\n    const response = await fetch(`${API_URL}/systems/${systemId}`, {\n      method: 'DELETE'\n    });\n    return response.json();\n  },\n  deleteLocation: async locationId => {\n    const response = await fetch(`${API_URL}/locations/${locationId}`, {\n      method: 'DELETE'\n    });\n    return response.json();\n  },\n  getLocationContent: async (locationId, type) => {\n    const response = await fetch(`${API_URL}/locations/${locationId}/content/${type}`);\n    return response.json();\n  },\n  createContent: async (locationId, formData) => {\n    const response = await fetch(`${API_URL}/locations/${locationId}/content`, {\n      method: 'POST',\n      body: formData\n    });\n    return response.json();\n  },\n  deleteContent: async contentId => {\n    const response = await fetch(`${API_URL}/content/${contentId}`, {\n      method: 'DELETE'\n    });\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","api","getSystems","response","fetch","json","createSystem","name","method","headers","body","JSON","stringify","getLocations","systemId","createLocation","uploadImage","file","formData","FormData","append","deleteSystem","deleteLocation","locationId","getLocationContent","type","createContent","deleteContent","contentId"],"sources":["/Users/cassielkitzinger/Desktop/RIFIM_App/src/services/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\n\nexport const api = {\n  // Systèmes\n  getSystems: async () => {\n    const response = await fetch(`${API_URL}/systems`);\n    return response.json();\n  },\n\n  createSystem: async (name) => {\n    const response = await fetch(`${API_URL}/systems`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name })\n    });\n    return response.json();\n  },\n\n  // Localisations\n  getLocations: async (systemId) => {\n    const response = await fetch(`${API_URL}/systems/${systemId}/locations`);\n    return response.json();\n  },\n\n  createLocation: async (systemId, name) => {\n    const response = await fetch(`${API_URL}/systems/${systemId}/locations`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name })\n    });\n    return response.json();\n  },\n\n  // Upload d'images\n  uploadImage: async (file) => {\n    const formData = new FormData();\n    formData.append('image', file);\n\n    const response = await fetch(`${API_URL}/upload`, {\n      method: 'POST',\n      body: formData\n    });\n    return response.json();\n  },\n\n  deleteSystem: async (systemId) => {\n    const response = await fetch(`${API_URL}/systems/${systemId}`, {\n      method: 'DELETE'\n    });\n    return response.json();\n  },\n\n  deleteLocation: async (locationId) => {\n    const response = await fetch(`${API_URL}/locations/${locationId}`, {\n      method: 'DELETE'\n    });\n    return response.json();\n  },\n  getLocationContent: async (locationId, type) => {\n    const response = await fetch(`${API_URL}/locations/${locationId}/content/${type}`);\n    return response.json();\n  },\n\n  createContent: async (locationId, formData) => {\n    const response = await fetch(`${API_URL}/locations/${locationId}/content`, {\n      method: 'POST',\n      body: formData\n    });\n    return response.json();\n  },\n\n  deleteContent: async (contentId) => {\n    const response = await fetch(`${API_URL}/content/${contentId}`, {\n      method: 'DELETE'\n    });\n    return response.json();\n  }\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}